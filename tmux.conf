
# mostly from:
# https://github.com/tony/tmux-config/blob/master/.tmux.conf

unbind C-b
set -g prefix C-a
bind C-a send-prefix

# colors ----------------------------

set -g default-terminal "screen-256color"
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green

# statusline ------------------------

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
#set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r |
cut -c 1-6)#[default]'
#set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load)
#[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")
#[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
set -g status-left '#[fg=green]#H#[default]'
set -g status-right '#[default]%H:%M:%S %Y-%b-%d'


# vim -------------------------------

setw -g mode-keys vi

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
# https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# https://gist.github.com/mislav/5189704
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq
vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq
vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq
vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq
vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq
vim && tmux send-keys 'C-\\') || tmux select-pane -l"


# windows ---------------------------

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# set to main-vertical, 60% width for main pane
bind m set-window-option main-pane-width 60\; select-layout main-vertical


# activity --------------------------

setw -g monitor-activity on
set -g visual-activity on

# Automatically set window title
setw -g automatic-rename


# misc ------------------------------

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
#bind-key a send-prefix

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"
