#!/bin/bash


HEADER='\033[95m'
OKBLUE='\033[34m'
OKGREEN='\033[32m'
WARNING='\033[93m'
FAIL='\033[91m'
ENDC='\033[0m'


cd ./$(git rev-parse --show-cdup)
result=$(mktemp -t precom)
changed_py=$(git diff --name-only --diff-filter=AM --staged | grep '.py$')
changed_js=$(git diff --name-only --diff-filter=AM --staged | grep -E '(.js|.html)$')

status=0

function show_err() {
  result_file=$1
  echo -e ${FAIL} FAILED
  echo -e ${ENDC}
  cat $result_file
  echo ---------------
}


echo -en ${HEADER}checking trailing whitespace ...
if grep -HEn ' +$' $changed_py > $result
then
  show_err $result
else
  echo -e $OKBLUE good $ENDC
fi

echo -en ${HEADER}checking for print statements ...
if grep -HEn '^ *print' $changed_py > $result
then
  show_err $result
else
  echo -e $OKBLUE good $ENDC
fi

echo -en ${HEADER}checking files with pyflakes ...
if ! pyflakes $changed_py > $result
then
  show_err $result
else
    echo -e $OKBLUE good $ENDC
fi

echo -en ${HEADER}checking for painfully long lines ...
if grep -HEn '^.{160}' $changed_py $changed_js > $result
then
  show_err $result
else
    echo -e $OKBLUE good $ENDC
fi

for t in 'console.log' 'alert' 'debugger'; do
  echo -en ${HEADER}checking for js $t statements ...
  if grep -HEn "${t}" $changed_js > $result
  then
    show_err $result
  else
      echo -e $OKBLUE good $ENDC
  fi
done

rm -f $result
