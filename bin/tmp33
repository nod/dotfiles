#!/usr/bin/env python

"""usage: %prog [options] file1 <file2>

Uploads files to 33ad/tmp via the command line.

CONFIGURATION
=============
The script will first look for an environment variable TMP33 containing the
upload password. If that doesn't exist, the password will be requested via
prompt.
"""


import httplib
import json
import StringIO
import sys
from urllib import urlencode
from json import loads as json_loads

import pycurl

usage = __doc__


def upload_file(fpath, passwd, randomized=False):
    out = StringIO.StringIO()
    c = pycurl.Curl()
    c.setopt(pycurl.WRITEFUNCTION, out.write)
    c.setopt(c.POST, True)
    c.setopt(c.URL, "http://33ad.org/tmp/up")
    opts = [
        ("human", passwd),
        ("submit", "tmp it."),
        ("json", "1"),
        ("upfile", (c.FORM_FILE, fpath)),
        ]
    if randomized: opts.append(('random', '1'))
    c.setopt(c.HTTPPOST, opts)
    c.perform()
    c.close()

    ret = json_loads(out.getvalue())
    print "type:", type(ret), "RET:", ret
    return ret.get('uri')


def main():
    from os import environ
    from sys import argv, stderr
    from optparse import OptionParser

    parser = OptionParser(usage)

    parser.add_option("-r", "--random", dest="randomized", default=False,
         action="store_true",  help="randomize the destination filename.")
    parser.add_option("-p", "--password", dest="password", default=False,
         help="tmp33 password. The TMP33 environment var will be checked if this isn't set.")

    (options, args) = parser.parse_args()

    if len(args) == 0:
        parser.print_help()
        exit()

    if options.password: passwd = options.passwd
    elif 'TMP33' in environ: passwd = environ['TMP33']
    else:
        print >>stderr, "Password required. See --help"
        exit()

    for f in args:
        print upload_file(f, passwd, options.randomized)


if __name__ == '__main__':
    main()

